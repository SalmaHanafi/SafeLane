<!--
The View component (maps/index.html.erb) is used for all the UI logic related to maps. Here, we used Embedded dynamic google map using an API. 
We learned this from Google Cloud's developers. The page has all the componenets that the user or the customer sees when they navigate throught the
"maps" tab which is found on the "Find Trails" page. In this page we have a header, Link to Show, the logic behind adding Google maps ,link to the trail path and more.
-->

<h1>You will find the map here!</h1>


  <body>
    <h3>Your Trail is here: </h3>
    <!--The div element for the map -->
    <div id="map"></div>
    <script>
// Initialize and add the map
  function initMap(){
  
   var place = {lat: 35.217571, lng: -80.833000};
  
 

  var map = new google.maps.Map(
      document.getElementById('map'), {zoom: 4, center: place});
  // The marker, positioned at the location we want it to mark to
    var marker = new google.maps.Marker({position: place, map: map});
  }
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async defer
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCE3g5ghXmEuUdAf84v66OF8mNafIer6hU&callback=initMap">
    </script>
  </body>



<br />
<%= link_to 'Back', trails_path %>